methods invocable through the db module:
(generally, the response is an array of JSON-objects

--- userlink ---
getUser
	fetches the user data
	required data: user_id
	response: user_id, token, username, name_first, name_last, email_id, picture, created_at, school_id

getUserClasses
	fetches the classes where the user is registered in
	required data: user_id
	response: class_id, classname, privacy, school_year, classcode, subject_name, teacher.username, user.accepted

getTeacherClasses
	fetches the classes where the user is teacher
	required data: user_id
	response: class_id, classname, privacy, school_year, classcode, subject.subject_name
	
registerUserToClass
	writes the specified user and class to the "user_is_in_class" relationship, if the code is correctly entered
	required data: user_id, classcode
	response: class_id
	
acceptUserInClass
	writes an accepted-update to the "user_is_in_class" relationship for specified user and class
	required data: user_id, class_id
	response: {"success" : 1}
	
createClass
	creates a class with the specified subject, and user as teacher
	required data: classname, user_id, subject_id, school_year
	response: class_id, classcode (generated by server)

deleteClass
	sets "deleted" flag of the specified class
	required data: class_id
	response: {"success" : 1}
	
	
	
	
	
--- tasklink ---
getTask
	fetches the task data
	required data: task_id
	response: taskname, public, user_id, data_file, subject_name, type_name
	
getUserTasks
	fetches the tasks of the user
	required data: user_id
	response: task_id, taskname, public, subject_name, type_name
	
createTask
	creates a task for the specified user
	required data: taskname, public, user_id, subject_id, tasktype_id
	response: {"success" : 1}

assignTaskToTopic
	writes the specified task and topic into the task_for_class
	required data: class_id, task_id, class_topic_id, obligatory, deadline, max_attempts
	response: {"success" : 1}
	

		
	

--- classlink ---
getClass
	fetches the class data
	required data: class_id
	response:  classname, user_id, schoolyear, classcode, subject_name
	
getClassUsers
	fetches the users of a class
	required data: class_id
	response: user_id, username, name_first, name_last, user.accepted
		
getClassTasks
	fetches the tasks of a class
	required data: class_id
	response: task_id, taskname, tasktype.type_name, class_topic_id
	
getClassTopics
	fetches the topics of a class
	required data: class_id
	response: class_topic_id, topic_name
	
createClassTopic
	creates a topic for the specified class with topic_name
	required data: class_id, topic_name
	response: class_topic_id

deleteClassTopic
	deletes the specified topic of the class
	required data: class_topic_id
	response: {"success" : 1}